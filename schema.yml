openapi: 3.0.3
info:
  title: AI chat API
  version: 1.0.0
  description: A simple API for messaging a chatbot
paths:
  /ai_chat_app/api/token/:
    post:
      operationId: ai_chat_app_api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - ai_chat_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /ai_chat_app/api/token/refresh/:
    post:
      operationId: ai_chat_app_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - ai_chat_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /ai_chat_app/chat/:
    get:
      operationId: ai_chat_app_chat_list
      tags:
      - ai_chat_app
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
          description: ''
    post:
      operationId: ai_chat_app_chat_create
      tags:
      - ai_chat_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Chat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Chat'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
  /ai_chat_app/register/:
    post:
      operationId: ai_chat_app_register_create
      tags:
      - ai_chat_app
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /ai_chat_app/user_info/:
    get:
      operationId: ai_chat_app_user_info_retrieve
      tags:
      - ai_chat_app
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
components:
  schemas:
    Chat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        message:
          type: string
        response:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - message
      - response
      - timestamp
      - username
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        tokens:
          type: integer
          readOnly: true
      required:
      - id
      - tokens
      - username
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
